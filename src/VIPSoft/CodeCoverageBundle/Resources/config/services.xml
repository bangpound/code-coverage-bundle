<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="vipsoft.code_coverage.controller.code_coverage.class">VIPSoft\CodeCoverageBundle\Controller\CodeCoverageController</parameter>
        <parameter key="vipsoft.code_coverage.driver.stub.class">VIPSoft\CodeCoverageCommon\Driver\Stub</parameter>
        <parameter key="vipsoft.code_coverage.driver.hhmv.class">VIPSoft\CodeCoverageCommon\Driver\HHVM</parameter>
        <parameter key="vipsoft.code_coverage.driver.xcache.class">VIPSoft\CodeCoverageCommon\Driver\XCache</parameter>
        <parameter key="vipsoft.code_coverage.driver.xdebug.class">PHP_CodeCoverage_Driver_Xdebug</parameter>
        <parameter key="vipsoft.code_coverage.driver.factory.class">VIPSoft\CodeCoverageCommon\Driver\Factory</parameter>
        <parameter key="vipsoft.code_coverage.listener.request.class">VIPSoft\CodeCoverageBundle\Listener\RequestListener</parameter>
        <parameter key="vipsoft.code_coverage.service.repository.class">VIPSoft\CodeCoverageBundle\Service\CodeCoverageRepository</parameter>
    </parameters>

    <services>
        <service id="vipsoft.code_coverage.driver.hhmv"
                 class="%vipsoft.code_coverage.driver.hhmv.class%"
                 synthetic="true">
            <tag name="vipsoft.code_coverage.driver"/>
        </service>
        <service id="vipsoft.code_coverage.driver.xcache"
                 class="%vipsoft.code_coverage.driver.xcache.class%"
                 synthetic="true">
            <tag name="vipsoft.code_coverage.driver"/>
        </service>
        <service id="vipsoft.code_coverage.driver.xdebug"
                 class="%vipsoft.code_coverage.driver.xdebug.class%"
                 synthetic="true">
            <tag name="vipsoft.code_coverage.driver"/>
        </service>

        <!-- The factory compiler pass will register available driver classes with the factory -->
        <service id="vipsoft.code_coverage.driver.factory" class="%vipsoft.code_coverage.driver.factory.class%" />

        <service id="vipsoft.code_coverage.driver.stub"
                 class="PHP_CodeCoverage_Driver"
                 factory-service="vipsoft.code_coverage.driver.factory"
                 factory-method="create"
        />

        <service id="vipsoft.code_coverage.controller.code_coverage" class="%vipsoft.code_coverage.controller.code_coverage.class%">
            <argument type="service" id="vipsoft.code_coverage.service.repository" />
            <argument type="service" id="vipsoft.code_coverage.driver.stub" on-invalid="null" />
        </service>

        <service id="vipsoft.code_coverage.listener.request" class="%vipsoft.code_coverage.listener.request.class%">
            <argument type="service" id="vipsoft.code_coverage.service.repository" />
            <argument type="service" id="vipsoft.code_coverage.driver.stub" on-invalid="null" />
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" />
            <tag name="kernel.event_listener" event="kernel.terminate" method="onKernelTerminate" />
        </service>

        <service id="vipsoft.code_coverage.service.repository" class="%vipsoft.code_coverage.service.repository.class%">
            <argument>%vipsoft_codecoverage.sqlite%</argument>
            <argument>%kernel.cache_dir%</argument>
        </service>
    </services>

</container>
